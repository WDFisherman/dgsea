plugins {
    id 'java'
}

group = 'nl.bioinf.dgsea'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // Logging
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.24.0'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.24.0'

    // https://mvnrepository.com/artifact/info.picocli/picocli
    implementation group: 'info.picocli', name: 'picocli', version: '4.7.6'
    // https://mvnrepository.com/artifact/info.picocli/picocli-codegen
    implementation group: 'info.picocli', name: 'picocli-codegen', version: '4.7.6'

    // https://mvnrepository.com/artifact/org.jfree/jfreechart
    implementation group: 'org.jfree', name: 'jfreechart', version: '1.5.0'


    // Testing
    testImplementation platform('org.junit:junit-bom:5.9.1')
    //testImplementation 'org.junit.jupiter.api:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter'

}

test {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    manifest {
        attributes(
                'Main-Class': 'nl.bioinf.dgsea.Main'
        )
        attributes 'Multi-Release': 'true'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
